// HEADERS {{{
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

// }}}
// CONFIG {{{
&mt {
    tapping-term-ms = <400>;
};

&lt {
    tapping-term-ms = <400>;
    quick-tap-ms = <250>;
};

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
  };
};
// }}}
/ {
// MACROS LAYERS {{{
    macros {
        version: version {
            compatible = "zmk,behavior-macro";
            label = "config version";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp DOT &kp N2 &kp N6>;
        };
        act: act {
            compatible = "zmk,behavior-macro-one-param";
            label = "activate";
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LSHFT &kp LCTRL>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LSHFT &kp LCTRL>
                ;
        };
        hyper: hyper {
            compatible = "zmk,behavior-macro";
            label = "hyper";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LSHFT &kp LALT &kp LCTRL>;
        };
        mouse_keys: mouse_keys {
            compatible = "zmk,behavior-macro";
            label = "mouse_keys";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp LALT &kp LALT &kp LALT &kp LALT>;
        };
        vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            label = "vim_save";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp ESC &kp COLON &kp W &kp RETURN>;
        };
        vim_exit: vim_exit {
            compatible = "zmk,behavior-macro";
            label = "vim_exit";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp ESC &kp COLON &kp W &kp Q &kp RETURN>;
        };
        vim_exit_all: vim_exit_all {
            compatible = "zmk,behavior-macro";
            label = "vim_exit_all";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp ESC &kp COLON &kp Q &kp A &kp L &kp RETURN>;
        };
        tmux_mode_select: tmux_mode_select {
            compatible = "zmk,behavior-macro";
            label = "tmux mode select";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp F>;
        };
        tmux_ns: tmux_ns {
            compatible = "zmk,behavior-macro";
            label = "tmux_ns";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp RPAR>;
        };
        tmux_ps: tmux_ps {
            compatible = "zmk,behavior-macro";
            label = "tmux_ps";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LPAR>;
        };
        tmux_nw: tmux_nw {
            compatible = "zmk,behavior-macro";
            label = "tmux_nw";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp N>;
        };
        tmux_pw: tmux_pw {
            compatible = "zmk,behavior-macro";
            label = "tmux_pw";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp P>;
        };
        warpd_l: warpd_l {
            compatible = "zmk,behavior-macro";
            label = "warpd_l";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(S)) &kp J &kp F>;
        };
        warpd_r: warpd_r {
            compatible = "zmk,behavior-macro";
            label = "warpd_r";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(S)) &kp K &kp F>;
        };
        warpd_j: warpd_j {
            compatible = "zmk,behavior-macro";
            label = "warpd_j";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(J))>;
        };
        warpd_k: warpd_k {
            compatible = "zmk,behavior-macro";
            label = "warpd_k";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(K))>;
        };
        ka_tog: ka_tog {
            compatible = "zmk,behavior-macro";
            label = "keyboard access toggle";
            #binding-cells = <0>;
            bindings = <&kp LC(F1)>;
        };
        f2_menu: f2_menu {
            compatible = "zmk,behavior-macro";
            label = "focus to menu";
            #binding-cells = <0>;
            bindings = <&kp LC(F2)>;
        };
        f2_dock: f2_dock {
            compatible = "zmk,behavior-macro";
            label = "focus to dock";
            #binding-cells = <0>;
            bindings = <&kp LC(F3)>;
        };
        f2_win: f2_win {
            compatible = "zmk,behavior-macro";
            label = "focus to active or next window";
            #binding-cells = <0>;
            bindings = <&kp LC(F4)>;
        };
        f2_tool: f2_tool {
            compatible = "zmk,behavior-macro";
            label = "focus to toolbar";
            #binding-cells = <0>;
            bindings = <&kp LC(F5)>;
        };
        f2_float: f2_float {
            compatible = "zmk,behavior-macro";
            label = "focus to floating window";
            #binding-cells = <0>;
            bindings = <&kp LC(F6)>;
        };
        tab_tog: tab_tog {
            compatible = "zmk,behavior-macro";
            label = "toggle tab navigation";
            #binding-cells = <0>;
            bindings = <&kp LC(F7)>;
        };
        f2_status: f2_status {
            compatible = "zmk,behavior-macro";
            label = "focus to status menus";
            #binding-cells = <0>;
            bindings = <&kp LC(F8)>;
        };
        help_menu: help_menu {
            compatible = "zmk,behavior-macro";
            label = "show help menu";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(SLASH))>;
        };
        zoom_tog: zoom_tog {
            compatible = "zmk,behavior-macro";
            label = "toggle zoom";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(N8))>;
        };
        zoom_in: zoom_in {
            compatible = "zmk,behavior-macro";
            label = "zoom in";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(EQUAL))>;
        };
        zoom_out: zoom_out {
            compatible = "zmk,behavior-macro";
            label = "zoom out";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(MINUS))>;
        };
        forward: forward {
            compatible = "zmk,behavior-macro";
            label = "forward";
            #binding-cells = <0>;
            bindings = <&kp LG(RBKT)>;
        };
        backward: backward {
            compatible = "zmk,behavior-macro";
            label = "backward";
            #binding-cells = <0>;
            bindings = <&kp LG(LBKT)>;
        };
        tab_next: tab_next {
            compatible = "zmk,behavior-macro";
            label = "next tab";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(RIGHT_BRACE))>;
        };
        tab_prev: tab_prev {
            compatible = "zmk,behavior-macro";
            label = "previous tab";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(LEFT_BRACE))>;
        };
        win_next: win_next {
            compatible = "zmk,behavior-macro";
            label = "next window in app";
            #binding-cells = <0>;
            bindings = <&kp LG(GRAVE)>;
        };
        win_full: win_full {
            compatible = "zmk,behavior-macro";
            label = "resize window to full screen";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(N1))>;
        };
        win_screen: win_screen {
            compatible = "zmk,behavior-macro";
            label = "move window to next screen";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LS(N1)))>;
        };
        win_half: win_half {
            compatible = "zmk,behavior-macro";
            label = "resize window half screen";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(N2))>;
        };
        win_vhalf: win_vhalf {
            compatible = "zmk,behavior-macro";
            label = "resize window half screen vert";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LS(N2)))>;
        };
        win_third: win_third {
            compatible = "zmk,behavior-macro";
            label = "resize window third screen";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(N3))>;
        };
        win_vthird: win_vthird {
            compatible = "zmk,behavior-macro";
            label = "resize window third screen vert";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LS(N3)))>;
        };
        win_quad: win_quad {
            compatible = "zmk,behavior-macro";
            label = "resize window quarter screen";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(N4))>;
        };
        win_vquad: win_vquad {
            compatible = "zmk,behavior-macro";
            label = "resize window quarter screen vert";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LS(N4)))>;
        };
        win_close: win_close {
            compatible = "zmk,behavior-macro";
            label = "close window";
            #binding-cells = <0>;
            bindings = <&kp LA(F4)>;
        };
        dis_up: dis_up {
            compatible = "zmk,behavior-macro";
            label = "discord next unread up";
            #binding-cells = <0>;
            bindings = <&kp LA(LS(UP))>;
        };
        dis_down: dis_down {
            compatible = "zmk,behavior-macro";
            label = "discord next unread down";
            #binding-cells = <0>;
            bindings = <&kp LA(LS(DOWN))>;
        };
        ss_win: ss_win {
            compatible = "zmk,behavior-macro";
            label = "screenshot windows";
            #binding-cells = <0>;
            bindings = <&kp LG(PRINTSCREEN)>;
        };
        ss: ss {
            compatible = "zmk,behavior-macro";
            label = "mac screenshot";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(N3))>;
        };
        ss2c: ss2c {
            compatible = "zmk,behavior-macro";
            label = "mac screenshot to clipboard";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(LS(N3)))>;
        };
        sss: sss {
            compatible = "zmk,behavior-macro";
            label = "mac select screenshot";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(N4))>;
        };
        sss2c: sss2c {
            compatible = "zmk,behavior-macro";
            label = "mac select screenshot to clipboard";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(LS(N4)))>;
        };

    };
// }}}
// COMBOS {{{
//   ╭────────────────────────╮ ╭────────────────────────╮
//   │  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
//   │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
//   │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
//   ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
//           ::  ╰────────────╯ ╰────────────╯
    combos {
        compatible = "zmk,combos";
        combo_inverse_winl {
            timeout-ms = <75>;
            slow-release;
            key-positions = <0 38>;
            bindings = <&mo 5>;
            layers = <0>;
        };
        combo_inverse_winr {
            timeout-ms = <75>;
            slow-release;
            key-positions = <11 39>;
            bindings = <&mo 4>;
            layers = <0>;
        };
        combo_lighting {
            timeout-ms = <75>;
            slow-release;
            key-positions = <0 11>;
            bindings = <&mo 7>;
            layers = <0>;
        };
        combo_tmux {
            timeout-ms = <75>;
            slow-release;
            key-positions = <7 8 9>;
            bindings = <&kp LC(A)>;
            layers = <0>;
        };
        combo_tmux_mode_select {
            timeout-ms = <75>;
            slow-release;
            key-positions = <2 3 4>;
            bindings = <&tmux_mode_select>;
            layers = <0>;
        };
        combo_capsword {
            timeout-ms = <75>;
            slow-release;
            key-positions = <12 23>;
            bindings = <&caps_word>;
            layers = <0>;
        };
        combo_version {
            timeout-ms = <75>;
            key-positions = <0 1>;
            bindings = <&version>;
            layers = <0>;
        };
        combo_delete {
            timeout-ms = <75>;
            slow-release;
            key-positions = <10 11>;
            bindings = <&kp DELETE>;
            layers = <0>;
        };
        combo_gui_left {
            timeout-ms = <75>;
            key-positions = <24 25>;
            bindings = <&kp LGUI>;
            layers = <0>;
        };
        combo_alt_left {
            timeout-ms = <75>;
            key-positions = <12 24>;
            bindings = <&kp LALT>;
            layers = <0>;
        };
        combo_gui_right {
            timeout-ms = <75>;
            key-positions = <34 35>;
            bindings = <&kp LGUI>;
            layers = <0>;
        };
        combo_alt_right {
            timeout-ms = <75>;
            key-positions = <23 35>;
            bindings = <&kp LALT>;
            layers = <0>;
        };
    };

// }}}
// BEHAVIORS {{{
    behaviors {
        lttp: layer_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            //global-quick-tap;
            flavor = "tap-preferred";
            bindings =
                <&mo>,
                <&kp>;
        };
        lthp: layer_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_HOLD_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;

            //global-quick-tap;

            flavor = "hold-preferred";
            bindings =
                <&mo>,
                <&kp>;
        };
        mttp: mod_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            //global-quick-tap;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        mthp: mod_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HOLD_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            //global-quick-tap;
            flavor = "hold-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        npsh1: numpad_shift_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_1";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N1>,
                <&kp EXCLAMATION>;

            mods = <(MOD_LSFT)>;
        };
        npsh2: numpad_shift_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_2";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N2>,
                <&kp AT>;

            mods = <(MOD_LSFT)>;
        };
        npsh3: numpad_shift_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_3";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N3>,
                <&kp HASH>;

            mods = <(MOD_LSFT)>;
        };
        npsh4: numpad_shift_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_4";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N4>,
                <&kp DOLLAR>;

            mods = <(MOD_LSFT)>;
        };
        npsh5: numpad_shift_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_5";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N5>,
                <&kp PERCENT>;

            mods = <(MOD_LSFT)>;
        };
        npsh6: numpad_shift_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_6";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N6>,
                <&kp CARET>;

            mods = <(MOD_LSFT)>;
        };
        npsh7: numpad_shift_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_7";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N7>,
                <&kp AMPERSAND>;

            mods = <(MOD_LSFT)>;
        };
        npsh8: numpad_shift_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_8";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N8>,
                <&kp ASTERISK>;

            mods = <(MOD_LSFT)>;
        };
        npsh9: numpad_shift_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_9";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N9>,
                <&kp LEFT_PARENTHESIS>;

            mods = <(MOD_LSFT)>;
        };
        npsh0: numpad_shift_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_0";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N0>,
                <&kp RIGHT_PARENTHESIS>;
            mods = <(MOD_LSFT)>;
        };
        rs_lt: rs_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift less than";
            #binding-cells = <0>;
            bindings =
                <&kp LESS_THAN>,
                <&kp COMMA>;
            mods = <(MOD_LSFT)>;
        };
        rs_gt: rs_gt {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift greater than";
            #binding-cells = <0>;
            bindings =
                <&kp GREATER_THAN>,
                <&kp DOT>;
            mods = <(MOD_LSFT)>;
        };
        rs_plus: rs_plus {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift plus";
            #binding-cells = <0>;
            bindings =
                <&kp PLUS>,
                <&kp EQUAL>;
            mods = <(MOD_LSFT)>;
        };
        rs_tilde: rs_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift tilde";
            #binding-cells = <0>;
            bindings =
                <&kp TILDE>,
                <&kp GRAVE>;
            mods = <(MOD_LSFT)>;
        };
        rs_underscore: rs_underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift underscore";
            #binding-cells = <0>;
            bindings =
                <&kp UNDERSCORE>,
                <&kp MINUS>;
            mods = <(MOD_LSFT)>;
        };
        rs1: rs1 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 1";
            #binding-cells = <0>;
            bindings =
                <&kp EXCLAMATION>,
                <&kp N1>;
            mods = <(MOD_LSFT)>;
        };
        rs2: rs2 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 2";
            #binding-cells = <0>;
            bindings =
                <&kp AT>,
                <&kp N2>;
            mods = <(MOD_LSFT)>;
        };
        rs3: rs3 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 3";
            #binding-cells = <0>;
            bindings =
                <&kp HASH>,
                <&kp N3>;
            mods = <(MOD_LSFT)>;
        };
        rs4: rs4 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 4";
            #binding-cells = <0>;
            bindings =
                <&kp DOLLAR>,
                <&kp N4>;
            mods = <(MOD_LSFT)>;
        };
        rs5: rs5 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 5";
            #binding-cells = <0>;
            bindings =
                <&kp PERCENT>,
                <&kp N5>;
            mods = <(MOD_LSFT)>;
        };
        rs6: rs6 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 6";
            #binding-cells = <0>;
            bindings =
                <&kp CARET>,
                <&kp N6>;
            mods = <(MOD_LSFT)>;
        };
        rs7: rs7 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 7";
            #binding-cells = <0>;
            bindings =
                <&kp AMPERSAND>,
                <&kp N7>;
            mods = <(MOD_LSFT)>;
        };
        rs8: rs8 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 8";
            #binding-cells = <0>;
            bindings =
                <&kp ASTERISK>,
                <&kp N8>;
            mods = <(MOD_LSFT)>;
        };
        rs9: rs9 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 9";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp N9>;
            mods = <(MOD_LSFT)>;
        };
        rs0: rs0 {
            compatible = "zmk,behavior-mod-morph";
            label = "reverse shift 0";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp N0>;
            mods = <(MOD_LSFT)>;
        };
        h_bs: h_bs {
            compatible = "zmk,behavior-mod-morph";
            label = "true backspace for c-h";
            #binding-cells = <0>;
            bindings =
                <&kp H>,
                <&kp BACKSPACE>;
            mods = <(MOD_LCTL)>;
        };
    };
// }}}
// CONDITIONAL LAYERS {{{
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <6>;
        };

        discord-layer {
            if-layers = <2 3>;
            then-layer = <8>;
        };

    };
// }}}
// KEYMAP {{{
// n.b. label strings are truncated after 8 characters
    keymap {
        compatible = "zmk,keymap";

        /* 0 Layer */
        default {
            label = "araxia";
            bindings = <
 &lthp 4 TAB              &kp Q   &kp W    &kp E                &kp R                &kp T               &kp Y         &kp U           &kp I             &kp O     &kp P            &lthp 5 BACKSPACE
 &mthp LEFT_CONTROL ESC   &kp A   &kp S    &kp D                &kp F                &kp G               &h_bs         &kp J           &kp K             &kp L     &kp SEMICOLON    &mttp RCTRL SINGLE_QUOTE
 &mttp LALT GRAVE         &kp Z   &kp X    &kp C                &kp V                &kp B               &kp N         &kp M           &kp COMMA         &kp DOT   &kp FSLH         &mttp RALT BACKSLASH
                                           &mthp LGUI RETURN    &mthp LSHIFT LC(W)   &lthp 1 ESC         &lthp 2 ESC   &lttp 3 SPACE   &mttp RGUI COLON
            >;
        };

        /* 1 Layer */
        symbols {
            label = "symbols";
            bindings = <
&kp BACKSPACE   &rs_lt       &rs7    &rs8      &rs9         &rs0                &kp LESS_THAN    &kp GREATER_THAN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp SEMICOLON   &kp BACKSPACE
&kp SPACE       &rs_gt       &rs4    &rs5      &rs6         &rs_tilde           &kp MINUS        &kp EQUAL          &kp LEFT_BRACE        &kp RIGHT_BRACE         &kp BACKSLASH   &none
&trans          &rs_plus     &rs1    &rs2      &rs3         &rs_underscore      &kp UNDERSCORE   &kp PLUS           &kp LEFT_BRACKET      &kp RIGHT_BRACKET       &kp GRAVE       &trans
                                     &trans    &kp LSHFT    &trans              &trans           &trans             &trans
            >;
        };

        /* 2 Layer */
        media {
            label = "media";
            bindings = <
&none    &kp F1   &kp F2   &kp F3   &kp F4   &kp F5           &kp C_MUTE    &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_BRI_DN  &kp C_BRI_UP
&none    &kp F6   &kp F7   &kp F8   &kp F9   &kp F10          &kp C_VOL_DN  &kp C_VOL_UP  &out OUT_USB  &out OUT_BLE  &bt BT_CLR    &bt BT_PRV
&none    &kp F11  &kp F12  &kp F13  &kp F14  &kp F15          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_NXT
                           &trans   &trans   &trans           &trans        &trans        &trans
            >;
        };

        /* 3 Layer */
        numpad {
            label = "numpad";
            bindings = <
&kp ASTERISK    &kp COMMA    &npsh7     &npsh8     &npsh9        &npsh0           &f2_menu      &f2_dock         &f2_status    &help_menu    &f2_tool           &kp TAB
&kp FSLH        &kp DOT      &npsh4     &npsh5     &npsh6        &kp COLON        &kp LEFT      &kp DOWN         &kp UP        &kp RIGHT     &none              &kp RETURN
&kp PLUS        &kp EQUAL    &npsh1     &npsh2     &npsh3        &kp MINUS        &kp PAGE_UP   &kp PAGE_DOWN    &kp HOME      &kp END       &kp KP_NUMLOCK     &win_close
                                        &trans     &kp LSHFT     &trans           &trans        &trans           &trans
            >;
        };

        /* 4 Layer */
        window_left {
            label = "move [L]";
            bindings = <
      &none    &win_next         &forward      &backward      &tab_next     &tab_prev          &act Y   &act U     &act I           &act O             &act P         &none
 &kp C_POWER   &kp LG(TAB)       &win_quad     &win_third     &win_half     &win_full          &act H   &act J     &act K           &act L             &act COLON     &none
 &kp C_SLEEP   &kp LG(LS(TAB))   &win_vquad    &win_vthird    &win_vhalf    &win_screen        &act N   &act M     &act LESS_THAN   &act GREATER_THAN  &act QUESTION  &none
                                               &trans         &trans        &trans             &trans   &trans     &trans
            >;
        };

        /* 5 Layer */
        window_right {
            label = "move [R]";
            bindings = <
 &none   &act Q  &act W  &act E  &act R  &act T      &tab_prev     &tab_next    &backward      &forward    &win_next        &none
 &none   &act A  &act S  &act D  &act F  &act G      &win_full     &win_half    &win_third     &win_quad   &kp LG(TAB)      &kp C_POWER
 &none   &act Z  &act X  &act C  &act V  &act B      &win_screen   &win_vhalf   &win_vthird    &win_vquad  &kp LG(LS(TAB))  &kp C_SLEEP
                         &trans  &trans  &trans      &trans        &trans       &trans
            >;
        };

        /* 6 Layer */
        /* Do not use this then-layer for regular layer switching */
        adjust {
            label = "adjust";
            bindings = <
 &tab_tog  &zoom_tog     &vim_exit_all  &none     &ss_win   &to 0                &ext_power EP_TOG   &none        &none      &none        &none      &none
 &none     &zoom_in      &vim_save      &ss2c     &ss       &warpd_l             &warpd_r            &warpd_j     &warpd_k   &tmux_pw     &tmux_ps   &none
 &none     &zoom_out     &vim_exit      &sss2c    &sss      &out OUT_USB         &out OUT_BLE        &none        &trans     &tmux_nw     &tmux_ns   &none
                                        &none     &none     &trans               &trans              &none        &none
            >;
        };

        /* 7 Layer */
        lighting {
            label = "lighting";
            bindings = <
 &trans     &none   &none   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD   &rgb_ug RGB_COLOR_HSB(25,100,0)       &none   &none   &kp F18   &kp F17   &kp F16   &trans
 &kp LCTL   &none   &none   &rgb_ug RGB_SAI  &rgb_ug RGB_SAD   &rgb_ug RGB_COLOR_HSB(25,100,80)      &none   &none   &kp F21   &kp F20   &kp F19   &none
 &kp LALT   &none   &none   &rgb_ug RGB_HUI  &rgb_ug RGB_HUD   &rgb_ug RGB_COLOR_HSB(25,0,100)       &none   &none   &kp F24   &kp F23   &kp F22   &none
                            &kp LGUI         &kp LSHFT         &none                                 &none   &none   &none
            >;
        };

        /* 8 Layer */
        /* Do not use this then-layer for regular layer switching */
        discord {
            label = "discord";
            bindings = <
 &none      &none      &none      &none      &none      &none           &act N          &none            &none       &none            &none    &none
 &none      &none      &none      &none      &none      &none           &kp PAGE_DOWN   &dis_down        &dis_up     &kp PAGE_UP      &none    &none
 &none      &none      &none      &none      &none      &none           &kp PAGE_UP     &kp PAGE_DOWN    &kp HOME    &kp END          &none    &none
                                  &none      &none      &none           &trans          &trans           &none
            >;
        };

    };

};
// }}}
/* vim: set ft=dts: */
