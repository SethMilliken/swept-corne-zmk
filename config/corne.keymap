/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        hyper: hyper {
            compatible = "zmk,behavior-macro";
            label = "hyper";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LSHFT &kp LALT &kp LCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
              &kp TAB   &kp Q   &kp W     &kp E           &kp R   &kp T           &kp Y      &kp U         &kp I    &kp O     &kp P  &kp BSPC
 &mt LEFT_CONTROL ESC   &kp A   &kp S     &kp D           &kp F   &kp G           &kp H      &kp J         &kp K    &kp L  &kp SEMI   &kp SQT
           &kp RETURN   &kp Z   &kp X     &kp C           &kp V   &kp B           &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                                       &kp LGUI  &kp LEFT_SHIFT   &mo 2           &mo 1  &kp SPACE  &kp LEFT_ALT
            >;
        };

        lower_layer {
            bindings = <
        &kp TILDE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5             &kp N6         &kp N7    &kp N8     &kp N9        &kp N0         &kp BSPC
 &kp LC(LA(LGUI))  &trans  &trans  &trans  &trans  &trans           &kp LEFT       &kp DOWN    &kp UP  &kp RIGHT  &kp C_VOL_DN  &kp C_VOLUME_UP
 &kp RC(LA(LGUI))  &trans  &trans  &trans  &trans  &trans          &kp PG_UP  &kp PAGE_DOWN  &kp HOME    &kp END         &mo 0            &to 3
                                   &trans  &trans  &trans             &trans         &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
        &kp GRAVE  &kp ASTERISK  &kp N1  &kp N2  &kp N3  &kp MINUS             &trans     &trans  &kp LPAR  &kp RPAR  &kp SEMI   &kp BSPC
 &kp LC(LA(LGUI))     &kp SLASH  &kp N4  &kp N5  &kp N6   &kp PLUS          &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
 &kp RC(LA(LGUI))     &kp EQUAL  &kp N7  &kp N8  &kp N9     &kp N0          &kp UNDER   &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                         &trans  &trans     &trans             &trans     &trans    &trans
            >;
        };

        media {
            bindings = <
 &kp C_BRI_DN  &kp C_BRIGHTNESS_INC  &kp F3  &kp F4  &kp F5  &kp F6            &kp C_PREV      &kp C_PP    &kp C_NEXT    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP
       &trans                &trans  &trans  &trans  &trans  &trans            &bt BT_CLR        &trans  &out OUT_USB  &out OUT_BLE    &bt BT_PRV       &bt BT_NXT
       &trans                &trans  &trans  &trans  &trans  &trans          &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0            &to 0
                                             &trans  &trans  &trans                &trans        &trans        &trans
            >;
        };
    };
};
