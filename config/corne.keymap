/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV     1
#define NUMPAD  2
#define MEDIA   3
#define HYPE LC(LA(LGUI))
#define RYPE RC(LA(LGUI))
#define KA_TOG    LC(F1)
#define F2_MENU   LC(F2)
#define F2_DOCK   LC(F3)
#define F2_WIN    LC(F4)
#define F2_TOOL   LC(F5)
#define F2_FLOAT  LC(F6)
#define TAB_TOG   LC(F7)
#define F2_STAT   LC(F8)
#define HELP_MENU LG(LS(SLASH))

&mt {
    tapping-term-ms = <300>;
};

/ {
    macros {
        hyper: hyper {
            compatible = "zmk,behavior-macro";
            label = "hyper";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LSHFT &kp LALT &kp LCTRL>;
        };
        mouse_keys: mouse_keys {
            compatible = "zmk,behavior-macro";
            label = "mouse_keys";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp LALT &kp LALT &kp LALT &kp LALT>;
        };
    };

    behaviors {
        npsh1: numpad_shift_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_1";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N1>,
                <&kp EXCLAMATION>;

            mods = <(MOD_LSFT)>;
        };
        npsh2: numpad_shift_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_2";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N2>,
                <&kp AT>;

            mods = <(MOD_LSFT)>;
        };
        npsh3: numpad_shift_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_3";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N3>,
                <&kp HASH>;

            mods = <(MOD_LSFT)>;
        };
        npsh4: numpad_shift_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_4";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N4>,
                <&kp DOLLAR>;

            mods = <(MOD_LSFT)>;
        };
        npsh5: numpad_shift_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_5";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N5>,
                <&kp PERCENT>;

            mods = <(MOD_LSFT)>;
        };
        npsh6: numpad_shift_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_6";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N6>,
                <&kp CARET>;

            mods = <(MOD_LSFT)>;
        };
        npsh7: numpad_shift_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_7";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N7>,
                <&kp AMPERSAND>;

            mods = <(MOD_LSFT)>;
        };
        npsh8: numpad_shift_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_8";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N8>,
                <&kp ASTERISK>;

            mods = <(MOD_LSFT)>;
        };
        npsh9: numpad_shift_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_9";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N9>,
                <&kp LEFT_PARENTHESIS>;

            mods = <(MOD_LSFT)>;
        };
        npsh0: numpad_shift_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_0";
            #binding-cells = <0>;
            bindings =
                <&kp KP_N0>,
                <&kp RIGHT_PARENTHESIS>;

            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
              &kp TAB   &kp Q   &kp W            &kp E           &kp R       &kp T               &kp Y        &kp U           &kp I    &kp O     &kp P     &lt 4 BACKSPACE
 &mt LEFT_CONTROL ESC   &kp A   &kp S            &kp D           &kp F       &kp G               &kp H        &kp J           &kp K    &kp L  &kp SEMI             &kp SQT
       &mt LALT GRAVE   &kp Z   &kp X            &kp C           &kp V       &kp B               &kp N        &kp M       &kp COMMA  &kp DOT  &kp FSLH  &mt LGUI BACKSLASH
                                       &mt LGUI RETURN  &mt LSHIFT ESC  &lt 2 LBKT          &lt 1 RBKT  &lt 3 SPACE  &mt LALT COLON
            >;
        };

        right {
            bindings = <
        &kp TILDE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5          &kp LC(F2)     &kp LC(F3)  &kp LC(F8)  &kp LG(LS(SLASH))         &kp LC(F5)      &kp LC(F7)
 &kp LC(LA(LGUI))  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0            &kp LEFT       &kp DOWN      &kp UP          &kp RIGHT  &kp LG(LA(MINUS))  &kp LG(LA(N8))
 &kp RC(LA(LGUI))  &trans  &trans  &trans  &trans  &trans           &kp PG_UP  &kp PAGE_DOWN    &kp HOME            &kp END   &kp LG(LA(PLUS))         &kp ESC
                                   &trans  &trans  &trans              &trans         &trans      &trans
            >;
        };

        left {
            bindings = <
      &mouse_keys  &kp KP_ASTERISK  &npsh7  &npsh8  &npsh9  &kp KP_MINUS          &kp KP_SLASH  &kp KP_CLEAR  &kp LPAR  &kp RPAR  &kp SEMI         &kp BSPC
 &kp LC(LA(LGUI))     &kp KP_EQUAL  &npsh4  &npsh5  &npsh6   &kp KP_PLUS             &kp MINUS     &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH        &kp GRAVE
 &kp RC(LA(LGUI))       &kp KP_DOT  &npsh1  &npsh2  &npsh3        &npsh0             &kp UNDER      &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &mt LSHFT TILDE
                                            &trans  &trans        &trans                &trans        &trans    &trans
            >;
        };

        media {
            bindings = <
 &trans   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5            &kp C_MUTE    &kp C_PREV      &kp C_PP    &kp C_NEXT  &kp C_BRI_DN  &kp C_BRI_UP
 &trans   &kp F6   &kp F7   &kp F8   &kp F9  &kp F10          &kp C_VOL_DN  &kp C_VOL_UP  &out OUT_USB  &out OUT_BLE    &bt BT_CLR    &bt BT_PRV
 &trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15          &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &bt BT_NXT
                            &trans   &trans   &trans                &trans        &trans        &trans
            >;
        };

        window {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans              &kp LG(LC(N1))      &kp LG(LC(N2))      &kp LG(LC(N3))      &kp LG(LC(N4))  &kp LG(GRAVE)  &trans
 &trans  &trans  &trans  &trans  &trans  &trans          &kp LG(LC(LS(N1)))  &kp LG(LC(LS(N2)))  &kp LG(LC(LS(N3)))  &kp LG(LC(LS(N4)))         &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &kp LG(LS(LBRC))    &kp LG(LS(RBRC))         &kp LG(TAB)     &kp LG(LS(TAB))         &trans  &trans
                         &trans  &trans  &trans                      &trans              &trans              &trans
            >;
        };
    };
};
